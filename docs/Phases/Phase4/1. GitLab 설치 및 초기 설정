# GitLab 설치 및 초기 설정

본 단계에서는 GitLab 서버를 설치하고, 관리자 계정을 생성한 뒤 프로젝트를 만드는 과정을 수행합니다.

---

## 목표
- GitLab CE 설치 (Ubuntu 서버 기반)
- 관리자 계정 설정
- GitLab 프로젝트 생성

---

## 1. GitLab 설치 (Omnibus 방식)

```bash
# 의존 패키지 설치
sudo apt update
sudo apt install -y curl openssh-server ca-certificates tzdata perl

# GitLab 패키지 저장소 추가
curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash

# GitLab 설치 (도메인이 없으면 호스트 IP로 설정)
sudo EXTERNAL_URL="http://<your-server-ip>" apt install gitlab-ce -y

# GitLab 설정 반영
sudo gitlab-ctl reconfigure
```

**설치 후 웹 브라우저에서 `http://<your-server-ip>` 접속하여 초기 비밀번호 설정**

## 2. GitLab 관리자 계정 설정

1. 웹 브라우저 접속: `http://<your-server-ip>`
2. root 사용자로 로그인
3. 초기 비밀번호 설정
4. Dashboard 진입 확인

## 3. GitLab 프로젝트 생성

1. **New Project** 클릭
2. **Create Blank Project** 선택
3. 아래 정보 입력:
   - **Project name**: `terraform-ansible-auto-deploy`
   - **Visibility**: Private (권장)
4. **Create project** 버튼 클릭

## 4. Personal Access Token 생성 (선택)

CI/CD 파이프라인에서 GitLab API 접근이 필요한 경우 토큰 생성

1. 우측 상단 사용자 아이콘 > **Edit profile**
2. 좌측 메뉴 **Access Tokens**
3. 아래 정보 입력
   - **Name**: `ci-token`
   - **Scopes**: `api`, `read_repository`, `write_repository`
4. 생성된 Token은 안전하게 보관 (한 번만 표시됨)

## 설치 확인

### GitLab 서비스 상태 확인
```bash
sudo gitlab-ctl status
```

### GitLab 로그 확인
```bash
sudo gitlab-ctl tail
```

### 초기 관리자 비밀번호 확인 (필요시)
```bash
sudo cat /etc/gitlab/initial_root_password
```

## 문제 해결

### GitLab 서비스 재시작
```bash
sudo gitlab-ctl restart
```

### 설정 재적용
```bash
sudo gitlab-ctl reconfigure
```

### 메모리 부족 문제
GitLab은 최소 4GB RAM을 권장합니다. 메모리가 부족한 경우:

```bash
# GitLab 설정 파일 편집
sudo nano /etc/gitlab/gitlab.rb

# 다음 라인 추가/수정
puma['worker_processes'] = 2
sidekiq['concurrency'] = 10
```

### 포트 충돌 문제
기본적으로 GitLab은 80, 443 포트를 사용합니다. 다른 포트 사용시:

```bash
# GitLab 설정 파일 편집
sudo nano /etc/gitlab/gitlab.rb

# 포트 변경
external_url 'http://<your-server-ip>:8080'
```

설정 변경 후 반드시 재구성 실행:
```bash
sudo gitlab-ctl reconfigure
```

**참고**: GitLab은 메모리 사용량이 높으므로 최소 4GB RAM 환경에서 사용하는 것을 권장합니다.
