stages: [plan, apply, config, destroy]

variables:
  TF_WORKDIR: "terraform"
  ANS_DIR1: "ansible-test"

# --- Terraform Plan: dev + terraform 변경 시 ---
tf:plan:
  stage: plan
  script:
    - cd "$TF_WORKDIR"
    - terraform -version
    - terraform init -input=false
    - terraform plan -input=false -detailed-exitcode -out=tfplan || export TF_EXIT=$?
    - if [ "${TF_EXIT:-0}" = "1" ]; then echo "terraform plan error"; exit 1; fi
    - if [ "${TF_EXIT:-0}" = "0" ]; then echo "No changes. Stopping."; exit 0; fi
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - "terraform/**/*"
    - when: never
  artifacts:
    paths: [ "terraform/tfplan" ]
    expire_in: 1 day

# --- Terraform Apply: main + terraform 변경 시(수동) ---
tf:apply:
  stage: apply
  needs: ["tf:plan"]
  script:
    - cd "$TF_WORKDIR"
    - terraform -version
    - terraform init -input=false
    - test -f tfplan && terraform apply -input=false -auto-approve tfplan || terraform apply -input=false -auto-approve
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
      allow_failure: false
      changes:
        - "terraform/**/*"
    - when: never
  environment:
    name: production
    # 환경 Stop 버튼으로 삭제를 트리거하려면 아래 주석 해제
    # on_stop: tf:destroy

# --- Ansible Syntax-check: ansible/루트 플레이북 변경 시 ---
ansible:check:
  stage: config
  script:
    - ansible --version
    - |
      if [ -f inventory.ini ]; then INV="inventory.ini";
      elif [ -f "$ANS_DIR1/inventory.ini" ]; then INV="$ANS_DIR1/inventory.ini";
      else echo "inventory.ini not found"; exit 1; fi
    - |
      if [ -f "$ANS_DIR1/site.yml" ]; then
        ansible-playbook -i "$INV" "$ANS_DIR1/site.yml" --syntax-check;
      fi
    - |
      for p in hosts-fix.yml jenkins-install.yml nginx-install.yml; do
        if [ -f "$p" ]; then
          ansible-playbook -i "$INV" "$p" --syntax-check;
        fi
      done
  rules:
    - changes:
        - "ansible-test/**/*"
        - "inventory.ini"
        - "hosts-fix.yml"
        - "jenkins-install.yml"
        - "nginx-install.yml"
    - when: never

# --- Ansible 실제 적용: 수동 실행 전용 ---
ansible:apply:
  stage: config
  script:
    - ansible --version
    - |
      if [ -f inventory.ini ]; then INV="inventory.ini";
      elif [ -f "$ANS_DIR1/inventory.ini" ]; then INV="$ANS_DIR1/inventory.ini";
      else echo "inventory.ini not found"; exit 1; fi
    - |
      if [ -f "$ANS_DIR1/site.yml" ]; then
        ansible-playbook -i "$INV" "$ANS_DIR1/site.yml";
      fi
    - |
      for p in hosts-fix.yml jenkins-install.yml nginx-install.yml; do
        if [ -f "$p" ]; then
          ansible-playbook -i "$INV" "$p";
        fi
      done
  when: manual
  rules:
    - changes:
        - "ansible-test/**/*"
        - "inventory.ini"
        - "hosts-fix.yml"
        - "jenkins-install.yml"
        - "nginx-install.yml"
    - when: never

# --- Terraform Destroy: 수동(환경 종료용) ---
tf:destroy:
  stage: destroy
  script:
    - cd "$TF_WORKDIR"
    - terraform -version
    - terraform init -input=false
    # - terraform plan -destroy -input=false   # 필요 시 계획 확인
    - terraform destroy -auto-approve
  when: manual
  allow_failure: false
  environment:
    name: production
    action: stop
